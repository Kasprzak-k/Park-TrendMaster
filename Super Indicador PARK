//Arthur Kasprzak

//@version=6
indicator('PARK TrendMaster', overlay=true, max_lines_count=500, max_labels_count=500, max_bars_back=500)

// ==============================
// 1. PARÂMETROS CONFIGURÁVEIS
// ==============================
// --- Configurações Básicas ---
rsiLength = input.int(14, 'Período RSI', group='Indicadores Osciladores')
maFast = input.int(9, 'Média Móvel Rápida', group='Tendência')
maSlow = input.int(21, 'Média Móvel Lenta', group='Tendência')

// --- Gaps (Desativado por padrão) ---
showGaps = input(false, 'Mostrar Gaps', group='Configurações de Gaps')
minGapSize = input(10.0, 'Tamanho Mínimo do Gap (pontos)', group='Configurações de Gaps')

// --- Novas Ferramentas Adicionadas ---
showSessionMarks = input(false, 'Marcar Sessões', tooltip='Mostra linhas de abertura/fechamento de cada sessão', group='Ferramentas Adicionais')
showVolumeZones = input(false, 'Zonas de Volume', tooltip='Destaca áreas com volume anormal', group='Ferramentas Adicionais')
volumeThreshold = input(1.5, 'Limite Volume (x médio)', group='Ferramentas Adicionais')

// --- Configurações de Sinais ---
signalConfig = input.string('Padrão', 'Configuração de Sinais', options=['Agressivo', 'Padrão', 'Conservador'], group='Configurações de Sinais')
signalTimeframe = input.int(30, 'Janela de Tempo para Sinais (minutos)', minval=1, maxval=60, group='Configurações de Sinais')

// Ajusta as configurações com base na seleção
maFastAdjusted = signalConfig == 'Agressivo' ? 5 : signalConfig == 'Padrão' ? maFast : 14
maSlowAdjusted = signalConfig == 'Agressivo' ? 13 : signalConfig == 'Padrão' ? maSlow : 34
rsiLengthAdjusted = signalConfig == 'Agressivo' ? 10 : signalConfig == 'Padrão' ? rsiLength : 18

// --- Configurações Padrão ---
atrLength = input.int(14, 'Período ATR', group='Volatilidade')
supresLookback = input.int(50, 'Período S/R', group='Suporte/Resistência')

// ==============================
// 2. CÁLCULOS PRINCIPAIS
// ==============================
price = close

// 2.1 Detecção de Gaps
var float lastClose = na
var bool gapUp = false
var bool gapDown = false
var float gapSize = 0.0

if barstate.isrealtime or barstate.isconfirmed
    lastClose := nz(close[1])
    gapSize := math.abs(open - lastClose)
    gapUp := open > lastClose and gapSize >= minGapSize
    gapDown := open < lastClose and gapSize >= minGapSize

// 2.2 Médias Móveis (ajustadas)
emaFast = ta.ema(price, maFastAdjusted)
emaSlow = ta.ema(price, maSlowAdjusted)
maCross = ta.crossover(emaFast, emaSlow)
maCrash = ta.crossunder(emaFast, emaSlow)

// 2.3 Osciladores (ajustados)
rsi = ta.rsi(price, rsiLengthAdjusted)

// 2.4 Volatilidade
atr = ta.atr(atrLength)
upperBand = close + (atr * 2)
lowerBand = close - (atr * 2)

// 2.5 Suporte/Resistência Dinâmico
supresHigh = ta.highest(high, supresLookback)
supresLow = ta.lowest(low, supresLookback)

// 2.6 Novas Ferramentas
newSession = ta.change(time('D'))
avgVolume = ta.sma(volume, 20)
highVolume = volume > avgVolume * volumeThreshold

// 2.7 Filtro de Tempo para Sinais
isSignalTime = (hour * 60 + minute) % signalTimeframe == 0

// ==============================
// 3. PLOTAGEM GRÁFICA
// ==============================
// 3.1 Tendência
plot(emaFast, 'EMA Rápida', #2962FF, 2)
plot(emaSlow, 'EMA Lenta', #FF6D00, 2)

// 3.2 Banda de Volatilidade
upperBandPlot = plot(upperBand, 'Banda Superior', #2196F3, 1)
lowerBandPlot = plot(lowerBand, 'Banda Inferior', #2196F3, 1)
fill(upperBandPlot, lowerBandPlot, color.new(#2196F3, 90))

// 3.3 Linhas de Suporte/Resistência
var line resLine = line.new(na, na, na, na, color=color.new(color.red, 50), width=2)
var line supLine = line.new(na, na, na, na, color=color.new(color.green, 50), width=2)

if barstate.islastconfirmedhistory
    line.set_xy1(resLine, bar_index[supresLookback], supresHigh)
    line.set_xy2(resLine, bar_index, supresHigh)
    line.set_xy1(supLine, bar_index[supresLookback], supresLow)
    line.set_xy2(supLine, bar_index, supresLow)

// 3.4 Gaps
var box gapBox = na
if showGaps and (gapUp or gapDown)
    gapBox := box.new(bar_index-1, gapUp ? open : lastClose, bar_index, gapUp ? lastClose : open, 
      bgcolor=color.new(gapUp ? color.green : color.red, 80), border_color=gapUp ? color.green : color.red)

// 3.5 Marcadores de Sessão
var line sessionLine = na
if showSessionMarks and newSession != 0
    sessionLine := line.new(bar_index, low * 0.995, bar_index, high * 1.005, color=color.new(color.white, 50))

// 3.6 Zonas de Volume
bgcolor(showVolumeZones and highVolume ? color.new(color.purple, 90) : na, title="Alto Volume")

// 3.7 Sinais com Filtro de Tempo
plotshape(maCross and isSignalTime, 'Cruzamento Altista', shape.triangleup, location.belowbar, color.green, size=size.small)
plotshape(maCrash and isSignalTime, 'Cruzamento Baixista', shape.triangledown, location.abovebar, color.red, size=size.small)

// ==============================
// 4. INTERFACE VISUAL
// ==============================
// 4.1 Labels Dinâmicos
var label infoLabel = label.new(na, na, '', style=label.style_label_left, color=#00000047, textcolor=color.rgb(255, 255, 255, 13))
if barstate.islastconfirmedhistory
    label.set_xy(infoLabel, bar_index, high)
    label.set_text(infoLabel, str.format('Preço: {0,number,#.##}\nRSI: {1,number,#.##}\nATR: {2,number,#.##}\nConfig: {3}\nTimeframe: {4}min', 
      price, rsi, atr, signalConfig, signalTimeframe))

// ==============================
// 5. ALERTAS
// ==============================
alertcondition(maCross and isSignalTime, 'Cruzamento Altista Médias', alert.freq_once_per_bar_close)
alertcondition(maCrash and isSignalTime, 'Cruzamento Baixista Médias', alert.freq_once_per_bar_close)
